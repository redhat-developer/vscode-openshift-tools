{
  "name": "vscode-openshift-connector",
  "displayName": "OpenShift Connector",
  "description": "Simplified app dev for Kubernetes or Red Hat OpenShift",
  "version": "0.2.9",
  "license": "MIT",
  "publisher": "redhat",
  "author": "Red Hat",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/vscode-openshift-tools.git"
  },
  "bugs": "https://github.com/redhat-developer/vscode-openshift-tools/issues",
  "engines": {
    "vscode": "^1.40.0"
  },
  "badges": [
    {
      "url": "https://badges.gitter.im/redhat-developer/openshift-connector.svg",
      "href": "https://gitter.im/redhat-developer/openshift-connector",
      "description": "Join us at #openshift-connector channel"
    },
    {
      "url": "https://img.shields.io/github/workflow/status/redhat-developer/vscode-openshift-tools/CI",
      "href": "https://github.com/redhat-developer/vscode-openshift-tools/actions?query=workflow%3ACI",
      "description": "Build status"
    },
    {
      "url": "https://codecov.io/gh/redhat-developer/vscode-openshift-tools/branch/master/graph/badge.svg",
      "href": "https://codecov.io/gh/redhat-developer/vscode-openshift-tools/branch/master/",
      "description": "Unit tests code coverage"
    },
    {
      "url": "https://img.shields.io/badge/license-MIT-brightgreen.svg",
      "href": "https://github.com/redhat-developer/vscode-openshift-tools/blob/master/LICENSE",
      "description": "License"
    }
  ],
  "categories": [
    "Other"
  ],
  "keywords": [
    "openshift",
    "kubernetes",
    "redhat",
    "clusters",
    "k8s",
    "redhat",
    "crc",
    "codereadycontainers"
  ],
  "icon": "images/openshift_extension.png",
  "main": "./out/src/extension",
  "scripts": {
    "verify": "node ./out/build/verify-tools.js",
    "vscode:prepublish": "npm run build && node ./out/build/bundle-tools.js",
    "compile": "npm-run-all compile:*",
    "compile:ext": "tsc -p ./",
    "compile:views": "webpack --mode development --config src/webview/webpack.config.js",
    "dev:log-view": "webpack-dev-server --mode development --config src/webview/log/webpack.config.js",
    "dev:describe-view": "webpack-dev-server --mode development --config src/webview/describe/webpack.config.js",
    "dev:cluster-view": "webpack-dev-server --mode development --config src/webview/cluster/webpack.config.js",
    "watch": "tsc -watch -p ./",
    "clean": "shx rm -rf out/build out/coverage out/src out/test out/tools out/test-resources out/logViewer",
    "lint": "eslint . --ext .ts --quiet",
    "lint-fix": "eslint . --ext .ts --fix",
    "lint-nic": "eslint . --ext .ts --no-inline-config",
    "bundle-tools": "node ./out/build/bundle-tools.js --platform",
    "todo": "leasot **/*.ts --ignore node_modules -x",
    "test": "npm run vscode:prepublish && node ./out/build/run-tests.js unit",
    "test-integration": "npm run vscode:prepublish && node ./out/build/run-tests.js integration",
    "test:instrument": "shx rm -rf out/src-orig && shx mv out/src out/src-orig && istanbul instrument --complete-copy --embed-source --output out/src out/src-orig",
    "test:coverage": "npm run vscode:prepublish && npm run test:instrument && node ./out/build/run-tests.js unit",
    "update-deps": "ncu --upgrade --loglevel verbose --packageFile package.json && npm update",
    "coverage:upload": "codecov -f coverage/coverage-final.json",
    "build": "npm run clean && npm run lint && npm run compile",
    "smoke-test": "npm run compile:ext && extest setup-and-run out/test/ui/smoke-test.js -o test/ui/settings.json -m test/ui/.mocharc.js"
  },
  "dependencies": {
    "@kubernetes/client-node": "^0.13.0",
    "@redhat-developer/vscode-redhat-telemetry": "0.1.1",
    "base64-inline-loader": "^1.1.1",
    "binary-search": "^1.3.6",
    "byline": "^5.0.0",
    "fs-extra": "^8.1.0",
    "git-fetch-pack": "^0.1.1",
    "git-transport-protocol": "^0.1.0",
    "globby": "^10.0.1",
    "js-yaml": "^3.13.1",
    "minimatch": "^3.0.4",
    "mkdirp": "^0.5.1",
    "pretty-bytes": "^5.4.0",
    "rxjs": "^6.5.3",
    "semver": "^6.3.0",
    "shelljs": "^0.8.3",
    "stacktrace-parser": "^0.1.10",
    "string-format": "^2.0.0",
    "tree-kill": "^1.2.2",
    "validator": "^12.2.0",
    "vscode-kubernetes-tools-api": "1.2.0",
    "vscode-welcome-view": "^0.0.4",
    "wait-port": "^0.2.7",
    "yaml": "^1.10.0"
  },
  "devDependencies": {
    "@material-ui/core": "^4.11.0",
    "@material-ui/icons": "^4.9.1",
    "@material-ui/lab": "^4.0.0-alpha.56",
    "@types/byline": "^4.2.31",
    "@types/chai": "^4.2.10",
    "@types/collections": "^5.0.0",
    "@types/fs-extra": "^8.1.0",
    "@types/js-yaml": "^3.12.2",
    "@types/mkdirp": "^0.5.2",
    "@types/mocha": "^8.0.3",
    "@types/node": "^12.12.35",
    "@types/pify": "^3.0.2",
    "@types/react": "^16.9.32",
    "@types/react-dom": "^16.9.6",
    "@types/react-lazylog": "^4.4.0",
    "@types/shelljs": "^0.8.6",
    "@types/sinon": "^5.0.7",
    "@types/sinon-chai": "^3.2.3",
    "@types/string-format": "^2.0.0",
    "@types/targz": "^1.0.0",
    "@types/tmp": "0.1.0",
    "@types/validator": "^10.11.3",
    "@types/vscode": "1.40.0",
    "@typescript-eslint/eslint-plugin": "^4.28.5",
    "@typescript-eslint/parser": "^4.28.5",
    "bufferutil": "^4.0.1",
    "call-bind": "^1.0.2",
    "chai": "^4.2.0",
    "codecov": "^3.7.1",
    "css-loader": "^3.6.0",
    "decache": "^4.6.0",
    "eslint": "7.31.0",
    "eslint-config-prettier": "^6.10.0",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-plugin-header": "^3.0.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-json": "^2.1.0",
    "eslint-plugin-prettier": "^3.1.1",
    "file-loader": "^6.1.0",
    "glob": "^7.1.6",
    "got": "^10.6.0",
    "handlebars": "^4.7.7",
    "hasha": "5.0.0",
    "html-webpack-plugin": "^4.2.0",
    "immutable": "^4.0.0-rc.12",
    "istanbul": "^0.4.5",
    "leasot": "^10.1.0",
    "mocha": "^6.2.2",
    "mocha-jenkins-reporter": "^0.4.2",
    "npm-run-all": "^4.1.5",
    "pify": "^4.0.1",
    "prettier": "^1.19.1",
    "proxyquire": "^2.1.3",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-lazylog": "^4.5.2",
    "react-loader-spinner": "^3.1.14",
    "remap-istanbul": "^0.13.0",
    "resolve-url-loader": "^4.0.0",
    "shx": "^0.3.2",
    "sinon": "^7.5.0",
    "sinon-chai": "^3.5.0",
    "source-map-support": "^0.5.16",
    "style-loader": "^1.3.0",
    "targz": "^1.0.1",
    "tmp": "0.1.0",
    "ts-loader": "^6.2.2",
    "tslint": "^5.20.1",
    "typescript": "^3.8.3",
    "unzip-stream": "^0.3.0",
    "utf-8-validate": "^5.0.2",
    "vscode-extension-tester": "^4.0.1",
    "vscode-test": "^1.5.2",
    "webpack": "^4.35.2",
    "webpack-cli": "^3.3.5",
    "webpack-dev-server": "^3.11.0"
  },
  "activationEvents": [
    "onView:openshiftProjectExplorer",
    "onView:extension.vsKubernetesExplorer",
    "onView:openshiftComponentTypesView",
    "onCommand:openshift.welcome",
    "onCommand:openshift.about",
    "onCommand:openshift.oc.about",
    "onCommand:openshift.output",
    "onCommand:openshift.create",
    "onCommand:openshift.openshiftConsole.palette",
    "onCommand:openshift.explorer.addCluster",
    "onCommand:openshift.explorer.login",
    "onCommand:openshift.explorer.login.credentialsLogin",
    "onCommand:openshift.explorer.login.tokenLogin",
    "onCommand:openshift.explorer.logout",
    "onCommand:openshift.explorer.refresh",
    "onCommand:openshift.componentTypesView.refresh",
    "onCommand:openshift.project.create",
    "onCommand:openshift.project.delete",
    "onCommand:openshift.project.delete.palette",
    "onCommand:openshift.app.delete.palette",
    "onCommand:openshift.app.describe",
    "onCommand:openshift.app.create",
    "onCommand:openshift.app.delete",
    "onCommand:openshift.component.create",
    "onCommand:openshift.component.createFromLocal",
    "onCommand:openshift.component.createFromGit",
    "onCommand:openshift.component.createFromBinary",
    "onCommand:openshift.component.createFromRootWorkspaceFolder",
    "onCommand:openshift.component.describe",
    "onCommand:openshift.component.describe.palette",
    "onCommand:openshift.component.log",
    "onCommand:openshift.component.unlink",
    "onCommand:openshift.component.unlink.palette",
    "onCommand:openshift.component.unlinkComponent.palette",
    "onCommand:openshift.component.unlinkService.palette",
    "onCommand:openshift.component.log.palette",
    "onCommand:openshift.component.followLog",
    "onCommand:openshift.component.followLog.palette",
    "onCommand:openshift.component.delete",
    "onCommand:openshift.component.push",
    "onCommand:openshift.component.lastPush",
    "onCommand:openshift.component.push.palette",
    "onCommand:openshift.component.watch",
    "onCommand:openshift.component.watch.palette",
    "onCommand:openshift.component.watch.terminate",
    "onCommand:openshift.component.watch.showLog",
    "onCommand:openshift.component.deployRootWorkspaceFolder",
    "onCommand:openshift.catalog.listComponents",
    "onCommand:openshift.catalog.listServices",
    "onCommand:openshift.url.create",
    "onCommand:openshift.url.delete",
    "onCommand:openshift.url.delete.palette",
    "onCommand:openshift.component.openUrl",
    "onCommand:openshift.component.openUrl.palette",
    "onCommand:openshift.component.debug",
    "onCommand:openshift.component.debug.palette",
    "onCommand:openshift.storage.create",
    "onCommand:openshift.storage.delete",
    "onCommand:openshift.service.create",
    "onCommand:openshift.service.delete",
    "onCommand:openshift.service.describe",
    "onCommand:openshift.service.describe.palette",
    "onCommand:openshift.component.folder.create",
    "onCommand:openshift.explorer.reportIssue",
    "onCommand:openshift.explorer.switchContext",
    "onCommand:clusters.openshift.project.openConsole",
    "onCommand:clusters.openshift.useProject",
    "onCommand:clusters.openshift.deploy",
    "onCommand:clusters.openshift.build.start",
    "onCommand:clusters.openshift.build.showLog",
    "onCommand:clusters.openshift.build.showLog.palette",
    "onCommand:clusters.openshift.build.followLog",
    "onCommand:clusters.openshift.build.delete",
    "onCommand:clusters.openshift.build.delete.palette",
    "onCommand:clusters.openshift.build.rebuild",
    "onCommand:clusters.openshift.build.openConsole",
    "onCommand:clusters.openshift.deploy.dc.showLog",
    "onCommand:clusters.openshift.deploy.dc.showLog.palette",
    "onCommand:clusters.openshift.deploy.delete",
    "onCommand:clusters.openshift.deploy.delete.palette",
    "onCommand:clusters.openshift.deploy.rcShowLog",
    "onCommand:clusters.openshift.deploy.rcShowLog.palette",
    "onCommand:clusters.openshift.deployment.openConsole",
    "onCommand:clusters.openshift.imagestream.openConsole"
  ],
  "contributes": {
    "commands": [
      {
        "command": "openshift.about",
        "title": "About",
        "category": "OpenShift"
      },
      {
        "command": "openshift.oc.about",
        "title": "Print OKD Client Tool Version",
        "category": "OpenShift"
      },
      {
        "command": "openshift.create",
        "title": "Create",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.start",
        "title": "Start Build",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy",
        "title": "Deploy",
        "category": "OpenShift"
      },
      {
        "command": "openshift.output",
        "title": "Show Output Channel",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.logout",
        "title": "Log out",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster",
        "title": "Add OpenShift Cluster",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/add-cluster.svg",
          "light": "images/title/light/add-cluster.svg"
        }
      },
      {
        "command": "openshift.explorer.stopCluster",
        "title": "Stop CRC",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.login",
        "title": "Login into Cluster",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-login.svg",
          "light": "images/title/light/icon-login.svg"
        }
      },
      {
        "command": "openshift.explorer.login.tokenLogin",
        "title": "Login into Cluster with token",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.login.credentialsLogin",
        "title": "Login into Cluster with credentials",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.switchContext",
        "title": "Switch Contexts",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/users.svg",
          "light": "images/title/light/users.svg"
        }
      },
      {
        "command": "openshift.explorer.refresh",
        "title": "Refresh Application Explorer View",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-refresh.svg",
          "light": "images/title/light/icon-refresh.svg"
        }
      },
      {
        "command": "openshift.explorer.reportIssue",
        "title": "Report Extension Issue on GitHub",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-issue.svg",
          "light": "images/title/light/icon-issue.svg"
        }
      },
      {
        "command": "openshift.project.create",
        "title": "New Project",
        "category": "OpenShift"
      },
      {
        "command": "openshift.project.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.project.delete.palette",
        "title": "Delete Project",
        "category": "OpenShift"
      },
      {
        "command": "openshift.project.set",
        "title": "Change Active Project",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-select-project.svg",
          "light": "images/title/light/icon-select-project.svg"
        }
      },
      {
        "command": "openshift.project.set.palette",
        "title": "Set Active Project",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.delete.palette",
        "title": "Delete Application",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.describe",
        "title": "Describe",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.describe.palette",
        "title": "Describe Application",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.create",
        "title": "New Component",
        "category": "OpenShift",
        "icon": {
          "light": "images/title/light/workspace-new.svg",
          "dark": "images/title/dark/workspace-new.svg"
        }
      },
      {
        "command": "openshift.component.createFromLocal",
        "title": "New Component from local folder",
        "category": "OpenShift",
        "icon": {
          "light": "images/title/light/workspace-new.svg",
          "dark": "images/title/dark/workspace-new.svg"
        }
      },
      {
        "command": "openshift.component.createFromRootWorkspaceFolder",
        "title": "New OpenShift Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.deployRootWorkspaceFolder",
        "title": "Deploy and push folder to OpenShift"
      },
      {
        "command": "openshift.component.createFromGit",
        "title": "New Component from Git repository",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.createFromBinary",
        "title": "New Component from binary",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.delete.palette",
        "title": "Delete Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.describe",
        "title": "Describe",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.describe.palette",
        "title": "Describe Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.log",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.log.palette",
        "title": "Show Component Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.followLog",
        "title": "Follow Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.followLog.palette",
        "title": "Follow Component Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.linkComponent",
        "title": "Link Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.unlink",
        "title": "Unlink",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.unlinkComponent.palette",
        "title": "Unlink Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.unlinkService.palette",
        "title": "Unlink Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.linkService",
        "title": "Link Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.watch.terminate",
        "title": "Stop",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.watch.showLog",
        "title": "Show Watch Command Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.openshiftConsole",
        "title": "Open Console Dashboard",
        "category": "OpenShift"
      },
      {
        "command": "openshift.openshiftConsole.palette",
        "title": "Open Console for Current Cluster",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.undeploy",
        "title": "Undeploy",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.undeploy.palette",
        "title": "Undeploy Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.push",
        "title": "Push",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.push.palette",
        "title": "Push Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.lastPush",
        "title": "Repeat last push command",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.watch",
        "title": "Watch",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.watch.palette",
        "title": "Watch Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.catalog.listComponents",
        "title": "List Catalog Components ",
        "category": "OpenShift"
      },
      {
        "command": "openshift.catalog.listServices",
        "title": "List Catalog Services",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.create",
        "title": "New URL",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.delete.palette",
        "title": "Delete URL",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.open",
        "title": "Open URL",
        "category": "OpenShift",
        "icon": "images/context/url-node-open.png"
      },
      {
        "command": "openshift.component.openUrl",
        "title": "Open in Browser",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.openUrl.palette",
        "title": "Open Component in Browser",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.debug",
        "title": "Debug",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.debug.palette",
        "title": "Debug Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.storage.create",
        "title": "New Storage",
        "category": "OpenShift"
      },
      {
        "command": "openshift.storage.delete.palette",
        "title": "Delete Storage",
        "category": "OpenShift"
      },
      {
        "command": "openshift.storage.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.create",
        "title": "New Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.describe",
        "title": "Describe",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.describe.palette",
        "title": "Describe Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.delete.palette",
        "title": "Delete Service",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.useProject",
        "title": "Use Project",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.project.openConsole",
        "title": "Open in Console",
        "Category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.showLog",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.showLog.palette",
        "title": "Show Build's Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.dc.showLog",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.dc.showLog.palette",
        "title": "Show DeploymentConfig's Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.followLog",
        "title": "Follow Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.delete.palette",
        "title": "Delete Build",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.rebuild",
        "title": "Rebuild",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.openConsole",
        "title": "Open in Console",
        "Category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.rcShowLog.palette",
        "title": "Show Replica's Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.rcShowLog",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.delete.palette",
        "title": "Delete Replica",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deployment.openConsole",
        "title": "Open in Console",
        "Category": "OpenShift"
      },
      {
        "command": "clusters.openshift.imagestream.openConsole",
        "title": "Open in Console",
        "Category": "OpenShift"
      },
      {
        "command": "clusters.openshift.route.open",
        "title": "Open in Browser",
        "category": "OpenShift"
      },
      {
        "command": "openshift.componentTypesView.refresh",
        "title": "Refresh Components Types View",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-refresh.svg",
          "light": "images/title/light/icon-refresh.svg"
        }
      },
      {
        "command": "openshift.componentType.openStarterProjectRepository",
        "title": "Open in Browser",
        "category": "OpenShift"
      },
      {
        "command": "openshift.componentType.cloneStarterProjectRepository",
        "title": "Clone to Workspace",
        "category": "OpenShift"
      },
      {
        "command": "openshift.componentType.newComponent",
        "title": "New Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster.openLaunchSandboxPage",
        "title": "Launch Developer Sandbox",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster.openCreateClusterPage",
        "title": "Deploy it in your public cloud",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster.openCrcAddClusterPage",
        "title": "Open Add CRC Cluster Wizard",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster.crcSetup",
        "title": "Run CRC Setup Command",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster.crcStart",
        "title": "Run CRC Setup Command",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.addCluster.crcStop",
        "title": "Run CRC Setup Command",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.revealContextInExplorer",
        "title": "Reveal in Explorer"
      },
      {
        "command": "openshift.component.test",
        "title": "Test",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.test.palette",
        "title": "Test Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.revealInExplorer",
        "title": "Reveal in Explorer",
        "category": "OpenShift"
      },
      {
        "command": "openshift.componentsView.refresh",
        "title": "Refresh Components View",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-refresh.svg",
          "light": "images/title/light/icon-refresh.svg"
        }
      },
      {
        "command": "openshift.componentTypesView.registry.add",
        "title": "Add Registry",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/add-cluster.svg",
          "light": "images/title/light/add-cluster.svg"
        }
      },
      {
        "command": "openshift.componentTypesView.registry.remove",
        "title": "Remove",
        "category": "OpenSift"
      },
      {
        "command": "openshift.welcome",
        "title": "Welcome",
        "category": "OpenShift"
      }
    ],
    "keybindings": [
      {
        "command": "openshift.explorer.login",
        "key": "alt+shift+l",
        "mac": "ctrl+shift+l"
      },
      {
        "command": "openshift.explorer.refresh",
        "key": "alt+shift+r",
        "mac": "ctrl+shift+r"
      },
      {
        "command": "openshift.component.lastPush",
        "key": "alt+shift+p",
        "mac": "ctrl+shift+p"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "openshiftView",
          "title": "OpenShift",
          "icon": "images/openshift_view.svg"
        }
      ]
    },
    "views": {
      "openshiftView": [
        {
          "id": "openshiftProjectExplorer",
          "name": "Application Explorer"
        },
        {
          "id": "openshiftComponentsView",
          "name": "Components"
        },
        {
          "id": "openshiftComponentTypesView",
          "name": "Component Types"
        },
        {
          "id": "openshiftWatchView",
          "name": "Watch Sessions"
        },
        {
          "id": "openshiftDebugView",
          "name": "Debug Sessions"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "openshiftProjectExplorer",
        "contents": "Cluster is not accessible or you are not logged in.\n[Login](command:openshift.explorer.login)\n[Select Kubernetes Context ](command:openshift.explorer.switchContext)\n[Add OpenShift Cluster](command:openshift.explorer.addCluster)",
        "enablement": "openshift.app.explorer.init"
      },
      {
        "view": "openshiftComponentsView",
        "contents": "You have no OpenShift Components in your workspace yet.\n[New Component](command:openshift.component.createFromLocal)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "openshift.component.createFromRootWorkspaceFolder",
          "when": "explorerResourceIsFolder && explorerResourceIsRoot"
        }
      ],
      "commandPalette": [
        {
          "command": "openshift.project.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.project.set",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.test",
          "when": "false"
        },
        {
          "command": "openshift.component.watch.terminate",
          "when": "false"
        },
        {
          "command": "openshift.url.open",
          "when": "false"
        },
        {
          "command": "openshift.componentType.openStarterProjectRepository",
          "when": "false"
        },
        {
          "command": "openshift.componentType.cloneStarterProjectRepository",
          "when": "false"
        },
        {
          "command": "openshift.component.createFromRootWorkspaceFolder",
          "when": "view == workbench.view.explorer"
        },
        {
          "command": "clusters.openshift.build.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.build.showLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.deploy.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.app.describe",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.explorer.addCluster",
          "when": "view == openshiftProjectExplorer && isVSCode == 1"
        },
        {
          "command": "openshift.explorer.login",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.deploy.rcShowLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.app.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.log",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.followLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.openshiftConsole",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.openUrl",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.debug",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.unlink",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.undeploy",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.watch",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.push",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.deployRootWorkspaceFolder",
          "when": "false"
        },
        {
          "command": "openshift.storage.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.url.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.service.describe",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.service.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.deploy.dc.showLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.route.open",
          "when": "false"
        },
        {
          "command": "clusters.openshift.project.openConsole",
          "when": "false"
        },
        {
          "command": "clusters.openshift.imagestream.openConsole",
          "when": "false"
        },
        {
          "command": "clusters.openshift.deployment.openConsole",
          "when": "false"
        },
        {
          "command": "clusters.openshift.build.openConsole",
          "when": "false"
        },
        {
          "command": "openshift.explorer.addCluster.openCrcAddClusterPage",
          "when": "false"
        },
        {
          "command": "openshift.explorer.addCluster.openLaunchSandboxPage",
          "when": "false"
        },
        {
          "command": "openshift.explorer.addCluster.openCreateClusterPage",
          "when": "false"
        },
        {
          "command": "openshift.explorer.addCluster.crcSetup",
          "when": "false"
        },
        {
          "command": "openshift.explorer.addCluster.crcStart",
          "when": "false"
        },
        {
          "command": "openshift.explorer.addCluster.crcStop",
          "when": "false"
        },
        {
          "command": "openshift.component.revealInExplorer",
          "when": "false"
        },
        {
          "command": "openshift.componentType.newComponent",
          "when": "false"
        },
        {
          "command": "openshift.component.watch.showLog",
          "when": "false"
        },
        {
          "command": "openshift.component.revealContextInExplorer",
          "when": "false"
        },
        {
          "command": "openshift.componentTypesView.registry.add",
          "when": "false"
        },
        {
          "command": "openshift.componentTypesView.registry.remove",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "openshift.componentTypesView.registry.add",
          "when": "view == openshiftComponentTypesView",
          "group": "navigation"
        },
        {
          "command": "openshift.componentTypesView.refresh",
          "when": "view == openshiftComponentTypesView",
          "group": "navigation"
        },
        {
          "command": "openshift.componentsView.refresh",
          "when": "view == openshiftComponentsView",
          "group": "navigation"
        },
        {
          "command": "openshift.explorer.addCluster",
          "when": "view == openshiftProjectExplorer && isVSCode == 1",
          "group": "navigation@0"
        },
        {
          "command": "openshift.explorer.login",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "openshift.explorer.switchContext",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@2"
        },
        {
          "command": "openshift.explorer.refresh",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@3"
        },
        {
          "command": "openshift.explorer.reportIssue",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@4"
        },
        {
          "command": "openshift.component.createFromLocal",
          "when": "view == openshiftComponentsView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "clusters.openshift.deployment.openConsole",
          "group": "3@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.dc"
        },
        {
          "command": "clusters.openshift.imagestream.openConsole",
          "group": "3@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.imagestream*/i"
        },
        {
          "command": "clusters.openshift.build.start",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.bc"
        },
        {
          "command": "clusters.openshift.deploy",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.dc"
        },
        {
          "command": "clusters.openshift.deploy.dc.showLog",
          "group": "2@1",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.dc"
        },
        {
          "command": "clusters.openshift.build.openConsole",
          "group": "3@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.bc"
        },
        {
          "command": "clusters.openshift.build.showLog",
          "group": "1@1",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "clusters.openshift.build.followLog",
          "group": "1@2",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "clusters.openshift.build.delete",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "clusters.openshift.deploy.rcShowLog",
          "group": "1@1",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.rc.*/i"
        },
        {
          "command": "clusters.openshift.deploy.delete",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.rc.*/i"
        },
        {
          "command": "clusters.openshift.build.rebuild",
          "group": "1@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "openshift.openshiftConsole",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "c0"
        },
        {
          "command": "openshift.project.create",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c1"
        },
        {
          "command": "openshift.catalog.listComponents",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c2@1"
        },
        {
          "command": "openshift.catalog.listServices",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c2@2"
        },
        {
          "command": "openshift.explorer.logout",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c3"
        },
        {
          "command": "openshift.about",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "c4"
        },
        {
          "command": "openshift.output",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "c5"
        },
        {
          "command": "openshift.project.delete",
          "when": "view == openshiftProjectExplorer && viewItem == project",
          "group": "p3"
        },
        {
          "command": "openshift.service.create",
          "when": "view == openshiftProjectExplorer && viewItem == project",
          "group": "p1@1"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer && viewItem == project ",
          "group": "p1@0"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer && viewItem == application ",
          "group": "a1"
        },
        {
          "command": "openshift.app.describe",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "a2"
        },
        {
          "command": "openshift.app.delete",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "a3"
        },
        {
          "command": "openshift.url.create",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c1@1"
        },
        {
          "command": "openshift.url.create",
          "when": "view == openshiftProjectExplorer && viewItem == componentNotPushed",
          "group": "c1@1"
        },
        {
          "command": "openshift.storage.create",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c1@2"
        },
        {
          "command": "openshift.storage.create",
          "when": "view == openshiftProjectExplorer && viewItem == componentNotPushed",
          "group": "c1@2"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c2@1"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer && viewItem == componentNotPushed",
          "group": "c2@1"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer && viewItem == componentNoContext",
          "group": "c2@1"
        },
        {
          "command": "openshift.component.log",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c2@2"
        },
        {
          "command": "openshift.component.followLog",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c2@3"
        },
        {
          "command": "openshift.component.linkComponent",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c3@1"
        },
        {
          "command": "openshift.component.linkService",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c3@2"
        },
        {
          "command": "openshift.component.unlink",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c3@3"
        },
        {
          "command": "openshift.component.openUrl",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@1"
        },
        {
          "command": "openshift.component.push",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@2"
        },
        {
          "command": "openshift.component.push",
          "when": "view == openshiftProjectExplorer && viewItem == componentNotPushed",
          "group": "c4@2"
        },
        {
          "command": "openshift.component.watch",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@3"
        },
        {
          "command": "openshift.component.undeploy",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@4"
        },
        {
          "command": "openshift.component.debug",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@5"
        },
        {
          "command": "openshift.component.test",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@6"
        },
        {
          "command": "openshift.component.revealContextInExplorer",
          "when": "view == openshiftProjectExplorer && viewItem == component || viewItem == componentNotPushed",
          "group": "c5@1"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer && viewItem == componentNoContext || ",
          "group": "c6@1"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c6@1"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer && viewItem == componentNotPushed",
          "group": "c6@1"
        },
        {
          "command": "openshift.service.create",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "a1"
        },
        {
          "command": "openshift.service.describe",
          "when": "view == openshiftProjectExplorer && viewItem == service",
          "group": "s1"
        },
        {
          "command": "openshift.service.delete",
          "when": "view == openshiftProjectExplorer && viewItem == service",
          "group": "s2"
        },
        {
          "command": "openshift.storage.delete",
          "when": "view == openshiftProjectExplorer && viewItem == storage",
          "group": "s3"
        },
        {
          "command": "openshift.url.delete",
          "when": "view == openshiftProjectExplorer && viewItem == componentRoute",
          "group": "s3"
        },
        {
          "command": "openshift.url.open",
          "when": "view == openshiftProjectExplorer && viewItem == componentRoute",
          "group": "inline@0"
        },
        {
          "command": "clusters.openshift.useProject",
          "when": "viewItem =~ /\\.openshift\\.inactiveProject/i"
        },
        {
          "command": "clusters.openshift.project.openConsole",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.project*/i"
        },
        {
          "command": "clusters.openshift.route.open",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.route/i"
        },
        {
          "command": "openshift.explorer.login.tokenLogin",
          "when": "view == openshiftProjectExplorer && viewItem == loginRequired"
        },
        {
          "command": "openshift.explorer.login.credentialsLogin",
          "when": "view == openshiftProjectExplorer && viewItem == loginRequired"
        },
        {
          "command": "openshift.component.watch.terminate",
          "when": "view == openshiftWatchView && viewItem == openshift.watch.process"
        },
        {
          "command": "openshift.component.watch.showLog",
          "when": "view == openshiftWatchView && viewItem == openshift.watch.process"
        },
        {
          "command": "openshift.project.set",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "inline"
        },
        {
          "command": "openshift.project.set",
          "when": "view == openshiftProjectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer && viewItem == project",
          "group": "inline"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "inline"
        },
        {
          "command": "openshift.componentType.openStarterProjectRepository",
          "when": "view == openshiftComponentTypesView && viewItem == s2iSampleProject || viewItem == devfileStarterProject",
          "group": "1@0"
        },
        {
          "command": "openshift.componentType.cloneStarterProjectRepository",
          "when": "view == openshiftComponentTypesView && viewItem == s2iSampleProject || viewItem == devfileStarterProject",
          "group": "1@1"
        },
        {
          "command": "openshift.componentType.newComponent",
          "when": "view == openshiftComponentTypesView && viewItem == s2iImageStreamTag || viewItem == devfileStarterProject || viewItem == devfileComponentType",
          "group": "0@0"
        },
        {
          "command": "openshift.componentTypesView.registry.remove",
          "when": "view == openshiftComponentTypesView && viewItem == devfileRegistry"
        },
        {
          "command": "openshift.component.revealInExplorer",
          "when": "view == openshiftComponentsView && viewItem == openshift.component"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "OpenShift Connector",
      "properties": {
        "openshiftConnector.showWelcomePage": {
          "title": "Show Welcome Page",
          "type": "boolean",
          "default": true,
          "description": "Show Welcome Page when using OpenShift Connector Extension"
        },
        "openshiftConnector.showChannelOnOutput": {
          "title": "Show channel on output",
          "type": "boolean",
          "default": false,
          "description": "Show OpenShift Connector output channel when new text added to output stream."
        },
        "openshiftConnector.outputVerbosityLevel": {
          "title": "Output Verbosity Level",
          "type": "number",
          "default": 0,
          "description": "Output verbosity level (value between 0 and 9) for OpenShift Create, Push and Watch commands in output channel and integrated terminal."
        },
        "openshiftConnector.searchForToolsInPath": {
          "Title": "Search CLI tools in PATH locations before using included binaries",
          "type": "boolean",
          "default": false,
          "description": "Force extension to search for `oc` and `odo` CLI tools in PATH locations before using bundled binaries."
        },
        "openshiftConnector.useWebviewInsteadOfTerminalView": {
          "Title": "Use Webview based editors to show 'Show Log', 'Follow Log', 'Watch Log' and 'Describe' commands output",
          "type": "boolean",
          "default": false,
          "description": "By default the Terminal View is used to execute OpenShift 'Show Log', 'Follow Log', 'Watch Log' and 'Describe' commands. Select this option if you want to use Webview based editors for it."
        },
        "openshiftConnector.crcBinaryLocation": {
          "Title": "CRC Executable Location",
          "type": "string",
          "default": null,
          "description": "Provide the path where the crc executable is present."
        },
        "openshiftConnector.crcPullSecretPath": {
          "Title": "CRC Pull Secret Path",
          "type": "string",
          "default": null,
          "description": "Provide the path where the pull secret file is present."
        },
        "openshiftConnector.crcCpuCores": {
          "Title": "CRC Cpu Cores",
          "type": "number",
          "default": 4,
          "description": "Number of CPU cores to allocate to the OpenShift cluster as selected during the first run"
        },
        "openshiftConnector.crcMemoryAllocated": {
          "Title": "CRC Memory Allocation",
          "type": "number",
          "default": 9216,
          "description": "MiB of memory to allocate to the OpenShift cluster as selected during the first run"
        }
      }
    }
  },
  "extensionDependencies": []
}
