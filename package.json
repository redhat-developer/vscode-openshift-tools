{
  "name": "vscode-openshift-connector",
  "displayName": "OpenShift Connector",
  "description": "Interacting with Red Hat OpenShift clusters and providing a streamlined developer experience using Visual Studio Code",
  "version": "0.1.2",
  "license": "MIT",
  "publisher": "redhat",
  "author": "Red Hat",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/redhat-developer/vscode-openshift-tools.git"
  },
  "bugs": "https://github.com/redhat-developer/vscode-openshift-tools/issues",
  "engines": {
    "vscode": "^1.39.2"
  },
  "badges": [
    {
      "url": "https://badges.gitter.im/redhat-developer/openshift-connector.svg",
      "href": "https://gitter.im/redhat-developer/openshift-connector",
      "description": "Join us at #openshift-connector channel"
    }
  ],
  "categories": [
    "Other"
  ],
  "keywords": [
    "openshift",
    "kubernetes",
    "redhat",
    "clusters",
    "k8s",
    "redhat"
  ],
  "icon": "images/openshift_extension.png",
  "activationEvents": [
    "onView:openshiftProjectExplorer",
    "onView:extension.vsKubernetesExplorer",
    "onCommand:openshift.about",
    "onCommand:openshift.output",
    "onCommand:openshift.openshiftConsole.palette",
    "onCommand:openshift.explorer.login",
    "onCommand:openshift.explorer.login.credentialsLogin",
    "onCommand:openshift.explorer.login.tokenLogin",
    "onCommand:openshift.explorer.logout",
    "onCommand:openshift.explorer.refresh",
    "onCommand:openshift.project.create",
    "onCommand:openshift.project.delete",
    "onCommand:openshift.project.delete.palette",
    "onCommand:openshift.app.delete.palette",
    "onCommand:openshift.app.describe",
    "onCommand:openshift.app.create",
    "onCommand:openshift.app.delete",
    "onCommand:openshift.component.import",
    "onCommand:openshift.component.create",
    "onCommand:openshift.component.createFromLocal",
    "onCommand:openshift.component.createFromGit",
    "onCommand:openshift.component.createFromBinary",
    "onCommand:openshift.component.describe",
    "onCommand:openshift.component.describe.palette",
    "onCommand:openshift.component.log",
    "onCommand:openshift.component.unlink",
    "onCommand:openshift.component.unlink.palette",
    "onCommand:openshift.component.unlinkComponent.palette",
    "onCommand:openshift.component.unlinkService.palette",
    "onCommand:openshift.component.log.palette",
    "onCommand:openshift.component.followLog",
    "onCommand:openshift.component.followLog.palette",
    "onCommand:openshift.component.delete",
    "onCommand:openshift.component.push",
    "onCommand:openshift.component.lastPush",
    "onCommand:openshift.component.push.palette",
    "onCommand:openshift.component.watch",
    "onCommand:openshift.component.watch.palette",
    "onCommand:openshift.catalog.listComponents",
    "onCommand:openshift.catalog.listServices",
    "onCommand:openshift.url.create",
    "onCommand:openshift.url.delete",
    "onCommand:openshift.url.delete.palette",
    "onCommand:openshift.component.openUrl",
    "onCommand:openshift.component.openUrl.palette",
    "onCommand:openshift.storage.create",
    "onCommand:openshift.storage.delete",
    "onCommand:openshift.service.create",
    "onCommand:openshift.service.delete",
    "onCommand:openshift.service.describe",
    "onCommand:openshift.service.describe.palette",
    "onCommand:openshift.component.folder.create",
    "onCommand:openshift.explorer.reportIssue",
    "onCommand:openshift.explorer.switchContext",
    "onCommand:clusters.openshift.project.openConsole",
    "onCommand:clusters.openshift.useProject",
    "onCommand:clusters.openshift.deploy",
    "onCommand:clusters.openshift.build.start",
    "onCommand:clusters.openshift.build.showLog",
    "onCommand:clusters.openshift.build.showLog.palette",
    "onCommand:clusters.openshift.build.followLog",
    "onCommand:clusters.openshift.build.delete",
    "onCommand:clusters.openshift.build.delete.palette",
    "onCommand:clusters.openshift.build.rebuild",
    "onCommand:clusters.openshift.build.openConsole",
    "onCommand:clusters.openshift.deploy.dc.showLog",
    "onCommand:clusters.openshift.deploy.dc.showLog.palette",
    "onCommand:clusters.openshift.deploy.delete",
    "onCommand:clusters.openshift.deploy.delete.palette",
    "onCommand:clusters.openshift.deploy.rcShowLog",
    "onCommand:clusters.openshift.deploy.rcShowLog.palette",
    "onCommand:clusters.openshift.deployment.openConsole",
    "onCommand:clusters.openshift.imagestream.openConsole"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "openshift.about",
        "title": "About",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.start",
        "title": "Start Build",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy",
        "title": "Deploy",
        "category": "OpenShift"
      },
      {
        "command": "openshift.output",
        "title": "Show Output Channel",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.logout",
        "title": "Log out",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.login",
        "title": "Log in to cluster",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-login.svg",
          "light": "images/title/light/icon-login.svg"
        }
      },
      {
        "command": "openshift.explorer.login.tokenLogin",
        "title": "Login into Cluster with token",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.login.credentialsLogin",
        "title": "Login into Cluster with credentials",
        "category": "OpenShift"
      },
      {
        "command": "openshift.explorer.switchContext",
        "title": "Switch Contexts",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/users.svg",
          "light": "images/title/light/users.svg"
        }
      },
      {
        "command": "openshift.explorer.refresh",
        "title": "Refresh View",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-refresh.svg",
          "light": "images/title/light/icon-refresh.svg"
        }
      },
      {
        "command": "openshift.explorer.reportIssue",
        "title": "Report Extension Issue on GitHub",
        "category": "OpenShift",
        "icon": {
          "dark": "images/title/dark/icon-issue.svg",
          "light": "images/title/light/icon-issue.svg"
        }
      },
      {
        "command": "openshift.project.create",
        "title": "New Project",
        "category": "OpenShift"
      },
      {
        "command": "openshift.project.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.project.delete.palette",
        "title": "Delete Project",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.delete.palette",
        "title": "Delete Application",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.describe",
        "title": "Describe",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.describe.palette",
        "title": "Describe Application",
        "category": "OpenShift"
      },
      {
        "command": "openshift.app.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.import",
        "title": "Import",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.create",
        "title": "New Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.createFromLocal",
        "title": "New Component from local folder",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.createFromGit",
        "title": "New Component from Git repository",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.createFromBinary",
        "title": "New Component form binary",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.delete.palette",
        "title": "Delete Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.describe",
        "title": "Describe",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.describe.palette",
        "title": "Describe Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.log",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.log.palette",
        "title": "Show Component's Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.followLog",
        "title": "Follow Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.followLog.palette",
        "title": "Follow Component's Log",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.linkComponent",
        "title": "Link Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.unlink",
        "title": "Unlink",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.unlinkComponent.palette",
        "title": "Unlink Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.unlinkService.palette",
        "title": "Unlink Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.linkService",
        "title": "Link Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.openshiftConsole",
        "title": "Open Console Dashboard",
        "category": "OpenShift"
      },
      {
        "command": "openshift.openshiftConsole.palette",
        "title": "Open Console for Current Cluster",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.undeploy",
        "title": "Undeploy",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.undeploy.palette",
        "title": "Undeploy Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.push",
        "title": "Push",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.push.palette",
        "title": "Push Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.lastPush",
        "title": "Repeat last push command",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.watch",
        "title": "Watch",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.watch.palette",
        "title": "Watch Component",
        "category": "OpenShift"
      },
      {
        "command": "openshift.catalog.listComponents",
        "title": "List Catalog Components ",
        "category": "OpenShift"
      },
      {
        "command": "openshift.catalog.listServices",
        "title": "List Catalog Services",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.create",
        "title": "New URL",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.delete.palette",
        "title": "Delete URL",
        "category": "OpenShift"
      },
      {
        "command": "openshift.url.open",
        "title": "Open URL",
        "category": "OpenShift",
        "icon": "images/context/url-node-open.png"
      },
      {
        "command": "openshift.component.openUrl",
        "title": "Open in Browser",
        "category": "OpenShift"
      },
      {
        "command": "openshift.component.openUrl.palette",
        "title": "Open Component in Browser",
        "category": "OpenShift"
      },
      {
        "command": "openshift.storage.create",
        "title": "New Storage",
        "category": "OpenShift"
      },
      {
        "command": "openshift.storage.delete.palette",
        "title": "Delete Storage",
        "category": "OpenShift"
      },
      {
        "command": "openshift.storage.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.create",
        "title": "New Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.describe",
        "title": "Describe",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.describe.palette",
        "title": "Describe Service",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "openshift.service.delete.palette",
        "title": "Delete Service",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.useProject",
        "title": "Use Project",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy",
        "title": "Deploy",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.project.openConsole",
        "title": "Open Project in Console"
      },
      {
        "command": "clusters.openshift.build.showLog",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.showLog.palette",
        "title": "Show Build's Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.dc.showLog",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.dc.showLog.palette",
        "title": "Show DeploymentConfig's Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.followLog",
        "title": "Follow Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.delete.palette",
        "title": "Delete Build",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.rebuild",
        "title": "Rebuild",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.build.openConsole",
        "title": "Open in Console"
      },
      {
        "command": "clusters.openshift.deploy.rcShowLog.palette",
        "title": "Show Replica's Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.rcShowLog",
        "title": "Show Log",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.delete.palette",
        "title": "Delete Replica",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deploy.delete",
        "title": "Delete",
        "category": "OpenShift"
      },
      {
        "command": "clusters.openshift.deployment.openConsole",
        "title": "Open in Console"
      },
      {
        "command": "clusters.openshift.imagestream.openConsole",
        "title": "Open in Console"
      }
    ],
    "keybindings": [
      {
        "command": "openshift.explorer.login",
        "key": "alt+shift+l",
        "mac": "ctrl+shift+l"
      },
      {
        "command": "openshift.explorer.refresh",
        "key": "alt+shift+r",
        "mac": "ctrl+shift+r"
      },
      {
        "command": "openshift.component.lastPush",
        "key": "alt+shift+p",
        "mac": "ctrl+shift+p"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "openshiftView",
          "title": "OpenShift",
          "icon": "images/openshift_view.svg"
        }
      ]
    },
    "views": {
      "openshiftView": [
        {
          "id": "openshiftProjectExplorer",
          "name": "OpenShift Application Explorer"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "openshift.project.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.import",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.build.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.build.showLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.deploy.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.app.describe",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.explorer.login",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.deploy.rcShowLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.app.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.log",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.followLog",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.openshiftConsole",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.openUrl",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.unlink",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.undeploy",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.watch",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.component.push",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.storage.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.url.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.service.describe",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "openshift.service.delete",
          "when": "view == openshiftProjectExplorer"
        },
        {
          "command": "clusters.openshift.deploy.dc.showLog",
          "when": "view == openshiftProjectExplorer"
        }
      ],
      "view/title": [
        {
          "command": "openshift.explorer.login",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@0"
        },
        {
          "command": "openshift.explorer.switchContext",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "openshift.explorer.refresh",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@2"
        },
        {
          "command": "openshift.explorer.reportIssue",
          "when": "view == openshiftProjectExplorer",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "clusters.openshift.deployment.openConsole",
          "group": "3@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.dc"
        },
        {
          "command": "clusters.openshift.imagestream.openConsole",
          "group": "3@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.imagestream*/i"
        },
        {
          "command": "clusters.openshift.build.start",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.bc"
        },
        {
          "command": "clusters.openshift.deploy",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.dc"
        },
        {
          "command": "clusters.openshift.deploy.dc.showLog",
          "group": "2@1",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.dc"
        },
        {
          "command": "clusters.openshift.build.openConsole",
          "group": "3@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem == vsKubernetes.resource.bc"
        },
        {
          "command": "clusters.openshift.build.showLog",
          "group": "1@1",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "clusters.openshift.build.followLog",
          "group": "1@2",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "clusters.openshift.build.delete",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "clusters.openshift.deploy.rcShowLog",
          "group": "1@1",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.rc.*/i"
        },
        {
          "command": "clusters.openshift.deploy.delete",
          "group": "2@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.rc.*/i"
        },
        {
          "command": "clusters.openshift.build.rebuild",
          "group": "1@0",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /openShift\\.resource\\.build.*/i"
        },
        {
          "command": "openshift.openshiftConsole",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "c0"
        },
        {
          "command": "openshift.project.create",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c1"
        },
        {
          "command": "openshift.catalog.listComponents",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c2@1"
        },
        {
          "command": "openshift.catalog.listServices",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c2@2"
        },
        {
          "command": "openshift.explorer.logout",
          "when": "view == openshiftProjectExplorer && viewItem == cluster && isLoggedIn",
          "group": "c3"
        },
        {
          "command": "openshift.about",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "c4"
        },
        {
          "command": "openshift.output",
          "when": "view == openshiftProjectExplorer && viewItem == cluster",
          "group": "c5"
        },
        {
          "command": "openshift.project.delete",
          "when": "view == openshiftProjectExplorer && viewItem == project",
          "group": "p3"
        },
        {
          "command": "openshift.service.create",
          "when": "view == openshiftProjectExplorer && viewItem == project",
          "group": "p1@1"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer && viewItem == project ",
          "group": "p1@0"
        },
        {
          "command": "openshift.component.create",
          "when": "view == openshiftProjectExplorer && viewItem == application ",
          "group": "a1"
        },
        {
          "command": "openshift.app.describe",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "a2"
        },
        {
          "command": "openshift.app.delete",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "a3"
        },
        {
          "command": "openshift.url.create",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c1@1"
        },
        {
          "command": "openshift.url.create",
          "when": "view == openshiftProjectExplorer && viewItem == component_not_pushed",
          "group": "c1@1"
        },
        {
          "command": "openshift.storage.create",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c1@2"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c2@1"
        },
        {
          "command": "openshift.component.describe",
          "when": "view == openshiftProjectExplorer && viewItem == component_no_context",
          "group": "c2@1"
        },
        {
          "command": "openshift.component.import",
          "when": "view == openshiftProjectExplorer && viewItem == component_no_context",
          "group": "c2@2"
        },
        {
          "command": "openshift.component.log",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c2@2"
        },
        {
          "command": "openshift.component.followLog",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c2@3"
        },
        {
          "command": "openshift.component.linkComponent",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c3@1"
        },
        {
          "command": "openshift.component.linkService",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c3@2"
        },
        {
          "command": "openshift.component.unlink",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c3@3"
        },
        {
          "command": "openshift.component.openUrl",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@1"
        },
        {
          "command": "openshift.component.push",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@2"
        },
        {
          "command": "openshift.component.push",
          "when": "view == openshiftProjectExplorer && viewItem == component_not_pushed",
          "group": "c4@2"
        },
        {
          "command": "openshift.component.watch",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@3"
        },
        {
          "command": "openshift.component.undeploy",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c4@4"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer && viewItem == component_no_context",
          "group": "c5@1"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer && viewItem == component",
          "group": "c5@1"
        },
        {
          "command": "openshift.component.delete",
          "when": "view == openshiftProjectExplorer && viewItem == component_not_pushed",
          "group": "c5@1"
        },
        {
          "command": "openshift.service.create",
          "when": "view == openshiftProjectExplorer && viewItem == application",
          "group": "a1"
        },
        {
          "command": "openshift.service.describe",
          "when": "view == openshiftProjectExplorer && viewItem == service",
          "group": "s1"
        },
        {
          "command": "openshift.service.delete",
          "when": "view == openshiftProjectExplorer && viewItem == service",
          "group": "s2"
        },
        {
          "command": "openshift.storage.delete",
          "when": "view == openshiftProjectExplorer && viewItem == storage",
          "group": "s3"
        },
        {
          "command": "openshift.url.delete",
          "when": "view == openshiftProjectExplorer && viewItem == component_route",
          "group": "s3"
        },
        {
          "command": "openshift.url.open",
          "when": "view == openshiftProjectExplorer && viewItem == component_route",
          "group": "inline"
        },
        {
          "command": "clusters.openshift.useProject",
          "when": "viewItem =~ /\\.openshift\\.inactiveProject/i"
        },
        {
          "command": "clusters.openshift.project.openConsole",
          "when": "view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.project*/i"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "OpenShift Connector",
      "properties": {
        "openshiftConnector.showChannelOnOutput": {
          "title": "Show channel on output",
          "type": "boolean",
          "default": false,
          "description": "Show OpenShift Connector output channel when new text added to output stream."
        },
        "openshiftConnector.outputVerbosityLevel": {
          "title": "Output Verbosity Level",
          "type": "number",
          "default": 0,
          "description": "Output verbosity level (value between 0 and 9) for OpenShift Create, Push and Watch commands in output channel and integrated terminal."
        },
        "openshiftConnector.disableCheckForMigration": {
          "title": "Disable check if migration required",
          "type": "boolean",
          "default": false,
          "description": "Dsable check if migration is required for resources created with previous version of the extension and mirgation request message."
        }
      }
    }
  },
  "extensionDependencies": [],
  "scripts": {
    "verify": "node ./out/build/verify-tools.js",
    "vscode:prepublish": "npm run build",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "clean": "rm -rf out || rmdir out /s /q",
    "test": "npm run clean && npm run compile && npm run verify && node ./out/build/unit-tests.js",
    "update-deps": "node_modules/.bin/ncu --upgrade --loglevel verbose --packageFile package.json && npm update",
    "coverage:upload": "codecov -f coverage/coverage-final.json",
    "build": "npm run clean && tslint -p tslint.json && npm run compile"
  },
  "devDependencies": {
    "@types/byline": "^4.2.31",
    "@types/chai": "^4.2.4",
    "@types/collections": "^5.0.0",
    "@types/fs-extra": "^8.0.1",
    "@types/js-yaml": "^3.12.1",
    "@types/mkdirp": "^0.5.2",
    "@types/mocha": "^5.2.7",
    "@types/node": "^12.12.3",
    "@types/request": "^2.48.3",
    "@types/shelljs": "^0.8.5",
    "@types/sinon": "^5.0.7",
    "@types/sinon-chai": "^3.2.3",
    "@types/string-format": "^2.0.0",
    "@types/tmp": "0.1.0",
    "@types/validator": "^10.11.3",
    "@types/vscode": "^1.39.0",
    "chai": "^4.2.0",
    "codecov": "^3.6.1",
    "decache": "^4.5.1",
    "glob": "^7.1.5",
    "istanbul": "^0.4.5",
    "mocha": "^6.2.2",
    "mocha-jenkins-reporter": "^0.4.2",
    "proxyquire": "^2.1.3",
    "remap-istanbul": "^0.13.0",
    "sinon": "^7.5.0",
    "sinon-chai": "^3.3.0",
    "tmp": "0.1.0",
    "tslint": "^5.20.0",
    "typescript": "^3.6.4",
    "vscode-test": "^1.2.2",
    "walker": "^1.0.7"
  },
  "dependencies": {
    "@kubernetes/client-node": "^0.11.0",
    "binary-search": "^1.3.6",
    "byline": "^5.0.0",
    "fs-extra": "^8.1.0",
    "git-fetch-pack": "^0.1.1",
    "git-transport-protocol": "^0.1.0",
    "globby": "^10.0.1",
    "hasha": "^5.1.0",
    "js-yaml": "^3.13.1",
    "mkdirp": "^0.5.1",
    "request": "^2.88.0",
    "request-progress": "^3.0.0",
    "rxjs": "^6.5.3",
    "semver": "^6.3.0",
    "shelljs": "^0.8.3",
    "string-format": "^2.0.0",
    "targz": "^1.0.1",
    "unzip-stream": "^0.3.0",
    "validator": "^12.0.0",
    "vscode-kubernetes-tools-api": "1.0.0"
  }
}
