# This is a basic workflow

name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: [ 20 ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Node
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      # Run install dependencies
      - name: Install dependencies
        run: npm ci

      # Run tests
      - name: Build and Test
        uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3 #v1.0.1
        env:
            NODE_OPTIONS: --max_old_space_size=16384
        with:
          run: npm run test:coverage --silent

      - uses: engineerd/setup-kind@aa272fe2a7309878ffc2a81c56cfe3ef108ae7d0 #v0.5.0
        if: (success() || failure()) && runner.os == 'Linux'
        name: Start cluster
        with:
          version: v0.11.1

      - name: Configure cluster
        if: (success() || failure()) && runner.os == 'Linux'
        run: |
          curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.19.1/install.sh | bash -s v0.19.1
          kubectl create -f https://operatorhub.io/install/service-binding-operator.yaml
          kubectl create -f https://operatorhub.io/install/stable/cloud-native-postgresql.yaml
          nb=0
          echo -n "Waiting for operator to show up "
          while [ "$nb" != "2" ]
          do
            echo -n "."
            sleep 1
            nb=`kubectl get pods -n operators --no-headers --ignore-not-found | grep Running | wc -l`
          done
          echo CLUSTER_URL=`kubectl cluster-info | sed -n -e "s/\x1B\[[0-9;]*[a-zA-Z]//g" -e '1s/.*running at \(.*\)$/\1/p'` >> $GITHUB_ENV
      # UI tests fail under linux
      # Run UI tests
      - name: Run UI Tests
        uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3 #v1.0.1
        env:
            NODE_OPTIONS: --max_old_space_size=16384
        if: runner.os == 'Linux'
        with:
          run: npm run public-ui-test
          options: -screen 0 1920x1080x24

      - name: Build and run integration tests
        if: (success() || failure()) && runner.os == 'Linux'
        uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3 #v1.0.1
        env:
          NODE_OPTIONS: --max_old_space_size=16384
        with:
          run: npm run test-integration:coverage --silent

      # Archiving integration tests artifacts
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure() && runner.os == 'Linux'
        with:
          name: artifacts-${{ matrix.os }}
          path: |
            /tmp/test-resources/screenshots/*.png
          retention-days: 2

      # Upload coverage to codecov.io
      - name: Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 #v4.5.0
        if: (success() || failure()) && runner.os == 'Linux'
        with:
          files: ./coverage/unit/coverage-final.json,./coverage/integration/coverage-final.json
